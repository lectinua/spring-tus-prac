<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="file">
    <select id="key" resultType="long">
        SELECT nextval('file_uid_seq')
    </select>

    <select id="list" resultType="file">
        select uid
             , id
             , saved
             , name
             , url
             , type
             , extension
             , size
             , reg_id
             , reg_dt
          from file
         where use_at = 'Y'
           and uid = #{uid}
           and saved != 'P'
           <if test="@Ognl@isNotEmpty(saved)">
           and saved = #{saved}
           </if>
           <if test="@Ognl@isNotEmpty(regId)">
           and reg_id = #{regId}
           </if>
         order by reg_dt desc
    </select>

    <insert id="insert" parameterType="file">
        insert into file
            (
                uid, id, saved, name, url
              , type, extension, size, reg_id
            )
        values
            (
                #{uid}, #{id} , #{saved}, #{name}, #{url}
              , #{type}, #{extension}, #{size}, #{regId}
            )
    </insert>

    <update id="merge" parameterType="file">
        WITH UPSERT AS (
            UPDATE file
               SET id = #{id}
				 , saved = #{saved}
		     WHERE uid = #{uid}
		       AND url = #{url}
		     RETURNING *
        )
        INSERT INTO file (
            uid, id, saved, name, url
		  , type, extension, size, reg_id
		)
        SELECT #{uid}
             , #{id}
             , #{saved}
             , #{name}
             , #{url}
             , #{type}
             , #{extension}
             , #{size}
             , #{regId}
         WHERE NOT EXISTS ( SELECT * FROM UPSERT )
	</update>

    <update id="delete" parameterType="file">
        update file
           set use_at = 'N'
         where url = #{url}
    </update>

    <update id="changeSaved" parameterType="file">
        update file
           set saved = 'Y'
             , uid = #{uid}
         where reg_id = #{regId}
           and url = #{url}
    </update>

    <delete id="deleteReal" parameterType="file">
        delete from file
         where url = #{url}
           <if test="@Ognl@isNotEmpty(saved)">
           and saved = #{saved}
           </if>
    </delete>

    <insert id="insertLog" parameterType="fileLog">
        insert into file_log
            (
                file_url
              , reg_id
            )
        values
            (
                #{fileUrl}
              , #{regId}
            )
    </insert>

    <select id="selectLog" resultType="fileLog">
        select uid
             , file_url
             , reg_id
             , reg_dt
          from file_log
         where file_url = #{fileUrl}
         order by reg_dt desc
    </select>

    <select id="isRegister" resultType="boolean">
        select when count(*) > 0 then 1 else 0 end
          from file
         where uid = #{uid}
           and reg_id = #{regId}
    </select>

</mapper>
